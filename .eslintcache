[{"/home/osama/projects/play-osama/src/index.js":"1","/home/osama/projects/play-osama/src/App.js":"2","/home/osama/projects/play-osama/src/reportWebVitals.js":"3","/home/osama/projects/play-osama/src/components/TopBar/TopBar.js":"4","/home/osama/projects/play-osama/src/pages/HomePage/HomePage.js":"5","/home/osama/projects/play-osama/src/pages/DifficultyPage/DifficultyPage.js":"6","/home/osama/projects/play-osama/src/pages/PlayPage/PlayPage.js":"7","/home/osama/projects/play-osama/src/ChessAI/ChessAI.js":"8"},{"size":500,"mtime":1609181093926,"results":"9","hashOfConfig":"10"},{"size":1381,"mtime":1609275462829,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609181093926,"results":"12","hashOfConfig":"10"},{"size":356,"mtime":1609254994663,"results":"13","hashOfConfig":"10"},{"size":879,"mtime":1609275527462,"results":"14","hashOfConfig":"10"},{"size":4405,"mtime":1609273736235,"results":"15","hashOfConfig":"10"},{"size":3606,"mtime":1609275342202,"results":"16","hashOfConfig":"10"},{"size":8291,"mtime":1609275403119,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tjuisz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/osama/projects/play-osama/src/index.js",[],["38","39"],"/home/osama/projects/play-osama/src/App.js",["40","41","42"],"/home/osama/projects/play-osama/src/reportWebVitals.js",[],"/home/osama/projects/play-osama/src/components/TopBar/TopBar.js",[],"/home/osama/projects/play-osama/src/pages/HomePage/HomePage.js",[],"/home/osama/projects/play-osama/src/pages/DifficultyPage/DifficultyPage.js",["43","44","45","46","47","48","49","50"],"import React, { Component, useState } from \"react\";\nimport Carousel from 'react-elastic-carousel';\n\nimport styles from './DifficultyPage.module.css';\nimport osama1 from '../../assets/babyOsama.jpeg';\nimport osama2 from '../../assets/Osama2.jpeg';\nimport osama5 from '../../assets/Osama5.jpeg';\nimport osama3 from '../../assets/Osama3.jpeg';\nimport osama4 from '../../assets/Osama4.jpeg';\n\nfunction DifficultyPage(props) {\n\n    const [currentImage, setCurrentImage] = useState(null);\n\n    return (\n        <div className={styles.DifficultyPageContainer}>\n            <div className={styles.DifficultySliderContainer}>\n\n                <Carousel >\n                    <div className={styles.CarouselItem}>\n                        <img className={styles.Image} src={osama1}></img>\n\n                        <p>\n                            When Osama had never even heard of Chess\n                        </p>\n\n                        <h2 onClick={() => {\n                            props.setContent(\"DifficultyChosen\");\n                            props.setAgeChosen(3);\n                            props.setImage(osama1);\n                            props.setInitialState(\"rnbqkbnr/ppppqppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n                        }} className={styles.AgeButton}>Age 3</h2>\n\n\n                    </div>\n\n                    <div className={styles.CarouselItem}>\n                        <img className={styles.Image} src={osama2}></img>\n\n                        <p>\n                            Osama had purchased a Harry Potter themed Chess board, and used it to collect dust\n                        </p>\n\n\n                        <h2 onClick={() => {\n                            props.setContent(\"DifficultyChosen\");\n                            props.setAgeChosen(9);\n                            props.setImage(osama2);\n                            props.setInitialState(\"rnbqkbnr/pprpprpp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n                        }} className={styles.AgeButton}>Age 9</h2>\n                    </div>\n\n\n                    <div className={styles.CarouselItem}>\n                        <img className={styles.Image} src={osama5}></img>\n\n                        <p>\n                            When Osama learned about En Passant: this is just stockfish at depth 40\n                        </p>\n\n\n                        <h2 onClick={() => {\n                            props.setContent(\"DifficultyChosen\");\n                            props.setAgeChosen(13);\n                            props.setImage(osama5);\n                            props.setInitialState(\"rnbqkbnr/pppppppp/8/8/8/8/PPRRRRPP/RNBQKBNR w KQkq - 0 1\");\n\n                        }} className={styles.AgeButton}>Age 13</h2>\n                    </div>\n\n\n                    <div className={styles.CarouselItem}>\n                        <img className={styles.Image} src={osama3}></img>\n\n                        <p>\n                            I don't know this one is filler, just try to start with a3 on this one.\n                        </p>\n\n\n                        <h2 onClick={() => {\n                            props.setContent(\"DifficultyChosen\");\n                            props.setAgeChosen(16);\n                            props.setImage(osama3);\n                            props.setInitialState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n\n                        }} className={styles.AgeButton}>Age 16</h2>\n                    </div>\n\n\n                    <div className={styles.CarouselItem}>\n                        <img className={styles.Image} src={osama4}></img>\n\n                        <p>\n                            Paul Morphy style, Osama retires from chess due to being the best.\n                            Also Paul Morphy style, he fell into a horrible state of delusion and paranoia\n                        </p>\n\n\n                        <h2 onClick={() => {\n                            props.setContent(\"DifficultyChosen\");\n                            props.setAgeChosen(21);\n                            props.setImage(osama4);\n                            props.setInitialState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n\n                        }} className={styles.AgeButton}>Age 21</h2>\n                    </div>\n\n                </Carousel>\n\n            </div>\n        </div>\n    );\n}\n\nexport default DifficultyPage;\n","/home/osama/projects/play-osama/src/pages/PlayPage/PlayPage.js",["51","52","53","54","55","56","57","58","59","60","61","62"],"import { React, useState, useEffect } from \"react\";\n\nimport styles from './PlayPage.module.css';\nimport Chessboard from 'chessboardjsx';\nimport player from '../../assets/player-profile-512.webp';\n\nimport {getBestMove} from '../../ChessAI/ChessAI';\n\nconst Chess = require(\"chess.js\");\n\n\n\n\nfunction PlayPage(props) {\n    \n    const [initialState] = useState(props.initialState);\n\n    const [chess, setChess] = useState(\n        new Chess(initialState)\n    );\n\n\n\n    const [gameStateFen, setGameStateFen] = useState(chess.fen());\n    const [windowWidth, setWindowWidth] = useState((window.innerWidth / 1920) * 825);\n\n    const handleMove = (move) => {\n        if (chess.move(move)) {\n            setTimeout(() => {\n                const moves = chess.moves();\n\n                if (moves.length > 0) {\n                    let computerMove = null;\n                    if (props.age == 3) computerMove = moves[Math.floor(Math.random() * moves.length)]; \n                    else if (props.age == 9) computerMove = getBestMove(chess, 1);\n                    else if (props.age == 13) computerMove = getBestMove(chess, 2);\n                    else if (props.age == 16) computerMove = getBestMove(chess, 3);\n                    else if (props.age == 21) computerMove = getBestMove(chess, 4);\n                    else return;\n                    chess.move(computerMove);\n                    setGameStateFen(chess.fen());\n                } else {\n                    alert(\"Checkmate!\")\n                }\n            }, 300);\n\n            setGameStateFen(chess.fen());\n        }\n    }\n\n\n\n    useEffect(() => {\n        setGameStateFen(chess.fen());\n\n        \n    }, [chess]);\n\n    \n\n\n\n\n\n    useEffect(() => {\n\n        \n        function handleResize() {\n            let currentWidth = window.innerWidth;\n            if (currentWidth < 800) setWindowWidth((800 / 1920) * 900);\n            else {\n                setWindowWidth((window.innerWidth / 1920) * 850)\n\n            }\n        }\n\n        window.addEventListener('resize', handleResize)\n    })\n\n\n    return (\n        <div className={styles.PlayPage}>\n\n            <div className={styles.ChessboardContainer}>\n                <div className={styles.PlayerContainer}>\n                    <img src={player} className={styles.image}></img>\n                    <p>You are playing as White</p>\n                </div>\n\n\n                <Chessboard\n                    width={windowWidth}\n                    position={gameStateFen}\n                    onDrop={(move) => {\n                        handleMove({\n                            from: move.sourceSquare,\n                            to: move.targetSquare,\n                            promotion: \"q\"\n                        })\n                    }}\n                />\n\n                <div className={styles.EnemyContainer}>\n                    <img src={props.image} className={styles.image}></img>\n\n                    {props.age == 3 && \"I am a three year old sitting in the bathtub\"}\n                    {props.age == 9 && \"I still can't play chess but at least I dont make illegal moves\"}\n                    {props.age == 13 && \"The mustache gives me stockfish powers\"}\n                    {props.age == 16 && \"I am literally a peacock why are you playing me in chess\"}\n                    {props.age == 21 && \"I have gone bald from pulling my hair out because of how bad at chess I am\"}\n\n                </div>\n            </div>\n\n            <button onClick={() => {\n                setChess(new Chess(initialState));\n            }}>Reset board</button>\n\n        </div>\n    );\n}\n\nexport default PlayPage;\n","/home/osama/projects/play-osama/src/ChessAI/ChessAI.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77"],"//most of this is from https://www.freecodecamp.org/news/simple-chess-ai-step-by-step-1d55a9266977/\n//I only added reordering, and thinking of implementing transposition table \n\n\n\nvar positionCount;\nexport var getBestMove = function (game, depthInput) {\n    if (game.game_over()) {\n        alert('Game over');\n    }\n\n    var depth = depthInput;\n\n    var bestMove = minimaxRoot(depth, game, true);\n    \n    return bestMove;\n};\n\n\n\n\nvar minimaxRoot = function(depth, game, isMaximisingPlayer) {\n\n    //implement reordering. let's look at captures first\n    var newGameMoves = game.moves({verbose:true});\n    console.log(newGameMoves);\n    var bestMove = -9999;\n    var bestMoveFound;\n\n    for(var i = 0; i < newGameMoves.length; i++) {\n        if (!(newGameMoves[i].flags == 'n')) {\n            var newGameMove = newGameMoves[i]\n            game.move(newGameMove);\n            var value = minimax(depth - 1, game, -10000, 10000, !isMaximisingPlayer);\n            game.undo();\n            if(value >= bestMove) {\n                bestMove = value;\n                bestMoveFound = newGameMove;\n            }\n        }\n    }\n\n\n    for(var i = 0; i < newGameMoves.length; i++) {\n        if ((newGameMoves[i].flags == 'n')) {\n            var newGameMove = newGameMoves[i]\n            game.move(newGameMove);\n            var value = minimax(depth - 1, game, -10000, 10000, !isMaximisingPlayer);\n            game.undo();\n            if(value >= bestMove) {\n                bestMove = value;\n                bestMoveFound = newGameMove;\n            }\n        }\n    }\n    return bestMoveFound;\n};\n\nvar minimax = function (depth, game, alpha, beta, isMaximisingPlayer) {\n    positionCount++;\n    if (depth === 0) {\n        return -evaluateBoard(game.board());\n    }\n\n    var newGameMoves = game.moves({verbose: true});\n\n    if (isMaximisingPlayer) {\n        var bestMove = -9999;\n\n\n        for (var i = 0; i < newGameMoves.length; i++) {\n            if (!(newGameMoves[i].flags == 'n')) {\n                game.move(newGameMoves[i]);\n                bestMove = Math.max(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n                game.undo();\n                alpha = Math.max(alpha, bestMove);\n                if (beta <= alpha) {\n                    return bestMove;\n                }\n            }\n       \n        }\n\n        for (var i = 0; i < newGameMoves.length; i++) {\n            if ((newGameMoves[i].flags == 'n')) {\n                game.move(newGameMoves[i]);\n                bestMove = Math.max(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n                game.undo();\n                alpha = Math.max(alpha, bestMove);\n                if (beta <= alpha) {\n                    return bestMove;\n                }\n            }\n       \n        }\n\n\n\n        return bestMove;\n    } else {\n        var bestMove = 9999;\n\n        for (var i = 0; i < newGameMoves.length; i++) {\n            if (!(newGameMoves[i].flags == 'n')) {\n                game.move(newGameMoves[i]);\n                bestMove = Math.min(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n                game.undo();\n                beta = Math.min(beta, bestMove);\n                if (beta <= alpha) {\n                    return bestMove;\n                }\n            }\n         \n        }\n\n        for (var i = 0; i < newGameMoves.length; i++) {\n            if ((newGameMoves[i].flags == 'n')) {\n                game.move(newGameMoves[i]);\n                bestMove = Math.min(bestMove, minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\n                game.undo();\n                beta = Math.min(beta, bestMove);\n                if (beta <= alpha) {\n                    return bestMove;\n                }\n            }\n         \n        }\n        return bestMove;\n    }\n};\n\nvar evaluateBoard = function (board) {\n    var totalEvaluation = 0;\n    for (var i = 0; i < 8; i++) {\n        for (var j = 0; j < 8; j++) {\n            totalEvaluation = totalEvaluation + getPieceValue(board[i][j], i ,j);\n        }\n    }\n    return totalEvaluation;\n};\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Evaluation\n * @param {} array \n */\nvar reverseArray = function(array) {\n    return array.slice().reverse();\n};\n\nvar pawnEvalWhite =\n    [\n        [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],\n        [5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0,  5.0],\n        [1.0,  1.0,  2.0,  3.0,  3.0,  2.0,  1.0,  1.0],\n        [0.5,  0.5,  1.0,  2.5,  2.5,  1.0,  0.5,  0.5],\n        [0.0,  0.0,  0.0,  2.0,  2.0,  0.0,  0.0,  0.0],\n        [0.5, -0.5, -1.0,  0.0,  0.0, -1.0, -0.5,  0.5],\n        [0.5,  1.0, 1.0,  -2.0, -2.0,  1.0,  1.0,  0.5],\n        [0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0]\n    ];\n\nvar pawnEvalBlack = reverseArray(pawnEvalWhite);\n\nvar knightEval =\n    [\n        [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0],\n        [-4.0, -2.0,  0.0,  0.0,  0.0,  0.0, -2.0, -4.0],\n        [-3.0,  0.0,  1.0,  1.5,  1.5,  1.0,  0.0, -3.0],\n        [-3.0,  0.5,  1.5,  2.0,  2.0,  1.5,  0.5, -3.0],\n        [-3.0,  0.0,  1.5,  2.0,  2.0,  1.5,  0.0, -3.0],\n        [-3.0,  0.5,  1.0,  1.5,  1.5,  1.0,  0.5, -3.0],\n        [-4.0, -2.0,  0.0,  0.5,  0.5,  0.0, -2.0, -4.0],\n        [-5.0, -4.0, -3.0, -3.0, -3.0, -3.0, -4.0, -5.0]\n    ];\n\nvar bishopEvalWhite = [\n    [ -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0],\n    [ -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],\n    [ -1.0,  0.0,  0.5,  1.0,  1.0,  0.5,  0.0, -1.0],\n    [ -1.0,  0.5,  0.5,  1.0,  1.0,  0.5,  0.5, -1.0],\n    [ -1.0,  0.0,  1.0,  1.0,  1.0,  1.0,  0.0, -1.0],\n    [ -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0],\n    [ -1.0,  0.5,  0.0,  0.0,  0.0,  0.0,  0.5, -1.0],\n    [ -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]\n];\n\nvar bishopEvalBlack = reverseArray(bishopEvalWhite);\n\nvar rookEvalWhite = [\n    [  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0],\n    [  0.5,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  0.5],\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\n    [ -0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -0.5],\n    [  0.0,   0.0, 0.0,  0.5,  0.5,  0.0,  0.0,  0.0]\n];\n\nvar rookEvalBlack = reverseArray(rookEvalWhite);\n\nvar evalQueen = [\n    [ -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0],\n    [ -1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0, -1.0],\n    [ -1.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],\n    [ -0.5,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],\n    [  0.0,  0.0,  0.5,  0.5,  0.5,  0.5,  0.0, -0.5],\n    [ -1.0,  0.5,  0.5,  0.5,  0.5,  0.5,  0.0, -1.0],\n    [ -1.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0, -1.0],\n    [ -2.0, -1.0, -1.0, -0.5, -0.5, -1.0, -1.0, -2.0]\n];\n\nvar kingEvalWhite = [\n\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\n    [ -3.0, -4.0, -4.0, -5.0, -5.0, -4.0, -4.0, -3.0],\n    [ -2.0, -3.0, -3.0, -4.0, -4.0, -3.0, -3.0, -2.0],\n    [ -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0],\n    [  2.0,  2.0,  0.0,  0.0,  0.0,  0.0,  2.0,  2.0 ],\n    [  2.0,  3.0,  1.0,  0.0,  0.0,  1.0,  3.0,  2.0 ]\n];\n\nvar kingEvalBlack = reverseArray(kingEvalWhite);\n\n\n\n\nvar getPieceValue = function (piece, x, y) {\n    if (piece === null) {\n        return 0;\n    }\n    var getAbsoluteValue = function (piece, isWhite, x ,y) {\n        if (piece.type === 'p') {\n            return 10 + ( isWhite ? pawnEvalWhite[y][x] : pawnEvalBlack[y][x] );\n        } else if (piece.type === 'r') {\n            return 50 + ( isWhite ? rookEvalWhite[y][x] : rookEvalBlack[y][x] );\n        } else if (piece.type === 'n') {\n            return 30 + knightEval[y][x];\n        } else if (piece.type === 'b') {\n            return 30 + ( isWhite ? bishopEvalWhite[y][x] : bishopEvalBlack[y][x] );\n        } else if (piece.type === 'q') {\n            return 90 + evalQueen[y][x];\n        } else if (piece.type === 'k') {\n            return 900 + ( isWhite ? kingEvalWhite[y][x] : kingEvalBlack[y][x] );\n        }\n        throw \"Unknown piece type: \" + piece.type;\n    };\n\n    var absoluteValue = getAbsoluteValue(piece, piece.color === 'w', x ,y);\n    return piece.color === 'w' ? absoluteValue : -absoluteValue;\n};",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":20,"column":24,"nodeType":"84","messageId":"85","endLine":20,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":21,"column":24,"nodeType":"84","messageId":"85","endLine":21,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":32,"column":23,"nodeType":"84","messageId":"85","endLine":32,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"90","line":13,"column":12,"nodeType":"88","messageId":"89","endLine":13,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":13,"column":26,"nodeType":"88","messageId":"89","endLine":13,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":21,"column":25,"nodeType":"94","endLine":21,"endColumn":68},{"ruleId":"92","severity":1,"message":"93","line":38,"column":25,"nodeType":"94","endLine":38,"endColumn":68},{"ruleId":"92","severity":1,"message":"93","line":55,"column":25,"nodeType":"94","endLine":55,"endColumn":68},{"ruleId":"92","severity":1,"message":"93","line":73,"column":25,"nodeType":"94","endLine":73,"endColumn":68},{"ruleId":"92","severity":1,"message":"93","line":91,"column":25,"nodeType":"94","endLine":91,"endColumn":68},{"ruleId":"82","severity":1,"message":"83","line":34,"column":35,"nodeType":"84","messageId":"85","endLine":34,"endColumn":37},{"ruleId":"82","severity":1,"message":"83","line":35,"column":40,"nodeType":"84","messageId":"85","endLine":35,"endColumn":42},{"ruleId":"82","severity":1,"message":"83","line":36,"column":40,"nodeType":"84","messageId":"85","endLine":36,"endColumn":42},{"ruleId":"82","severity":1,"message":"83","line":37,"column":40,"nodeType":"84","messageId":"85","endLine":37,"endColumn":42},{"ruleId":"82","severity":1,"message":"83","line":38,"column":40,"nodeType":"84","messageId":"85","endLine":38,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":86,"column":21,"nodeType":"94","endLine":86,"endColumn":64},{"ruleId":"92","severity":1,"message":"93","line":104,"column":21,"nodeType":"94","endLine":104,"endColumn":69},{"ruleId":"82","severity":1,"message":"83","line":106,"column":32,"nodeType":"84","messageId":"85","endLine":106,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":107,"column":32,"nodeType":"84","messageId":"85","endLine":107,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":108,"column":32,"nodeType":"84","messageId":"85","endLine":108,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":109,"column":32,"nodeType":"84","messageId":"85","endLine":109,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":110,"column":32,"nodeType":"84","messageId":"85","endLine":110,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":31,"column":37,"nodeType":"84","messageId":"85","endLine":31,"endColumn":39},{"ruleId":"95","severity":1,"message":"96","line":44,"column":13,"nodeType":"88","messageId":"97","endLine":44,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":45,"column":36,"nodeType":"84","messageId":"85","endLine":45,"endColumn":38},{"ruleId":"95","severity":1,"message":"98","line":46,"column":17,"nodeType":"88","messageId":"97","endLine":46,"endColumn":28},{"ruleId":"95","severity":1,"message":"99","line":48,"column":17,"nodeType":"88","messageId":"97","endLine":48,"endColumn":22},{"ruleId":"86","severity":1,"message":"100","line":60,"column":5,"nodeType":"88","messageId":"89","endLine":60,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":72,"column":41,"nodeType":"84","messageId":"85","endLine":72,"endColumn":43},{"ruleId":"95","severity":1,"message":"96","line":84,"column":18,"nodeType":"88","messageId":"97","endLine":84,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":85,"column":40,"nodeType":"84","messageId":"85","endLine":85,"endColumn":42},{"ruleId":"95","severity":1,"message":"101","line":101,"column":13,"nodeType":"88","messageId":"97","endLine":101,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":103,"column":18,"nodeType":"88","messageId":"97","endLine":103,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":104,"column":41,"nodeType":"84","messageId":"85","endLine":104,"endColumn":43},{"ruleId":"95","severity":1,"message":"96","line":116,"column":18,"nodeType":"88","messageId":"97","endLine":116,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":117,"column":40,"nodeType":"84","messageId":"85","endLine":117,"endColumn":42},{"ruleId":"102","severity":1,"message":"103","line":258,"column":9,"nodeType":"104","messageId":"105","endLine":258,"endColumn":51},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'currentImage' is assigned a value but never used.","'setCurrentImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-redeclare","'i' is already defined.","redeclared","'newGameMove' is already defined.","'value' is already defined.","'positionCount' is assigned a value but never used.","'bestMove' is already defined.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]